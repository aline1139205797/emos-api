<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.api.service.db.dao.TbRoleDao">
    <select id="searchAllRole" resultType="HashMap">
        SELECT id,
               role_name AS roleName
        FROM tb_role
        ORDER BY id
    </select>
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT id,
               role_name           AS roleName,
               permissions,
               `desc`,
               default_permissions AS defaultPermissions
        FROM tb_role
        WHERE id = #{id}
    </select>
    <select id="searchRoleByPage" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT r.id,
        r.role_name AS roleName,
        JSON_LENGTH(r.permissions) AS permissions,
        count(u.id) AS users,
        r.`desc`,
        r.systemic
        FROM tb_role r
        LEFT JOIN tb_user u ON JSON_CONTAINS(u.role, CONVERT(r.id, char))
        WHERE
        1=1
        <if test="roleName!=null">
            AND r.role_name like '%${roleName}%'
        </if>
        GROUP BY r.id
        ORDER BY r.id
        LIMIT #{start} , #{length}
    </select>
    <select id="searchRoleCount" parameterType="java.util.HashMap" resultType="long">
        SELECT count(r.id)
        FROM tb_role r
        WHERE
        1=1
        <if test="roleName!=null">
            AND r.role_name like '%${roleName}%'
        </if>
    </select>
    <delete id="deleteByIds">
        DELETE FROM tb_role
        WHERE id IN
        <foreach collection="array" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
        AND systemic = FALSE
    </delete>
    <select id="searchCanDelete" resultType="boolean">
        SELECT IF( SUM(temp.users) > 0, FALSE , TRUE) AS resulet
        FROM (
        SELECT count(u.id) AS users
        FROM tb_role r
        LEFT JOIN tb_user u ON json_contains(u.role, convert(r.id, char))
        WHERE r.id IN
        <foreach collection="array" open="(" separator="," close=")" item="one">
            #{one}
        </foreach>
        GROUP BY r.id
        ) temp
    </select>
    <insert id="insertRole" parameterType="com.example.emos.api.service.db.pojo.TbRole">
        INSERT INTO tb_role
        SET role_name=#{roleName},
        permissions=#{permissions}
        <if test="desc!=null">
            ,`desc`=#{desc}
        </if>
    </insert>
    <update id="updateRole" parameterType="com.example.emos.api.service.db.pojo.TbRole">
        UPDATE tb_role
        SET role_name=#{roleName},
            permissions=#{permissions},
            `desc`=#{desc}
        WHERE id = #{id} AND id != 0
    </update>
</mapper>